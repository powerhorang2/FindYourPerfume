<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<context:property-placeholder location="classpath:config.properties"/>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/res/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.springriders.perfume" />
	
	<beans:bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	    <beans:property name="poolName" value="springHikariCP" />
	    <beans:property name="connectionTestQuery" value="SELECT 1 FROM DUAL" />
	    <beans:property name="driverClassName" value="${db.driver}" />
	    <beans:property name="maximumPoolSize" value="10" />
	    <beans:property name="idleTimeout" value="5000" />
	    
	    <beans:property name="jdbcUrl" value="${db.url}"/>
		<beans:property name="username" value="${db.username}"/>
		<beans:property name="password" value="${db.password}"/>
	</beans:bean>
	
	<beans:bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
	    <beans:constructor-arg ref="hikariConfig" />
	</beans:bean>
	
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="configLocation" value="/WEB-INF/spring/mybatis-alias.xml"/>
	</beans:bean>
	
	<mybatis-spring:scan base-package="com.springriders.perfume"/>	
	
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<interceptors> 
		<!-- 어드민 페이지 인터셉터 -->
		<interceptor> 
			<!-- 인터셉터가 적용될 URL 입니다. --> 
			<mapping path="/user/admin" /> 
			<!-- 인터셉터가 제외될 URL 입니다. --> 
			<!-- <exclude-mapping path="/login.do"/> --> 
			<!-- 적용될 인터셉터를 지정합니다. --> 
			<beans:bean id="adminInterceptor" class="com.springriders.perfume.interceptor.AdminInterceptor" /> 
		</interceptor> 
		
		<!-- 마이 페이지 인터셉터 -->
		<interceptor> 
			<!-- 인터셉터가 적용될 URL 입니다. --> 
			<mapping path="/user/myPage" /> 
			<!-- 인터셉터가 제외될 URL 입니다. --> 
			<!-- <exclude-mapping path="/login.do"/> --> 
			<!-- 적용될 인터셉터를 지정합니다. --> 
			<beans:bean id="myPageInterceptor" class="com.springriders.perfume.interceptor.MyPageInterceptor" /> 
		</interceptor>
		
		<interceptor> 
			<!-- 인터셉터가 적용될 URL 입니다. --> 
			<mapping path="/user/join" /> 
			<!-- 인터셉터가 제외될 URL 입니다. --> 
			<!-- <exclude-mapping path="/login.do"/> --> 
			<!-- 적용될 인터셉터를 지정합니다. --> 
			<beans:bean id="joinInterceptor" class="com.springriders.perfume.interceptor.JoinInterceptor" /> 
		</interceptor>
		
		<interceptor> 
			<!-- 인터셉터가 적용될 URL 입니다. --> 
			<mapping path="/user/login" /> 
			<!-- 인터셉터가 제외될 URL 입니다. --> 
			<!-- <exclude-mapping path="/login.do"/> --> 
			<!-- 적용될 인터셉터를 지정합니다. --> 
			<beans:bean id="loginInterceptor" class="com.springriders.perfume.interceptor.LoginInterceptor" /> 
		</interceptor> 
	</interceptors>
	
	<!-- file Upload -->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">        
        <beans:property name="maxUploadSize" value="5242880" /> <!-- 5MB -->
    </beans:bean>
	<!-- beans:bean class="com.springriders.perfume" />
	<task:annotation-driven /-->
</beans:beans>